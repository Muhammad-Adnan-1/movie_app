import 'package:book_my_seat/book_my_seat.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:movies_app/features/watch/data/model/upcoming_movies_api_response.dart';
import 'package:movies_app/shared/assets/my_svgs.dart';
import 'package:movies_app/shared/helpers/helper.dart';
import 'package:movies_app/shared/styles/color.dart';
import 'package:movies_app/shared/widgets/custom_appbar.dart';
import 'package:movies_app/shared/widgets/custom_button.dart';

class SeatSelectionPage extends StatelessWidget {
  final MovieModel? movieModel;

  const SeatSelectionPage({super.key, this.movieModel});

  @override
  Widget build(BuildContext context) {
    var theme = Theme.of(context);
    return Scaffold(
      appBar: customAppBar(
        context,
        title: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.center,
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const SizedBox(
              height: 18,
            ),
            Text(
              movieModel?.originalTitle ?? "",
              style: theme.textTheme.bodyLarge,
            ),
            Text(
              "${movieModel?.releaseDate?.toFormattedDateString()}  |  12:30 Hall 1",
              style: theme.textTheme.bodySmall?.copyWith(
                  color: AppColors.blueColor,
                  fontWeight: FontWeight.w500,
                  fontSize: 12),
            )
          ],
        ),
        backgroundColor: theme.colorScheme.surface,
        elevation: 0,
        centerTitle: true,
      ),
      body: Container(
        width: MediaQuery.of(context).size.width,
        height: MediaQuery.of(context).size.height,
        margin: const EdgeInsets.only(top: 14),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [

            Container(
              height: MediaQuery.of(context).size.height * 0.5,
              color: theme.primaryColor.withOpacity(0.1),
              child: SeatLayoutWidget(
                onSeatStateChanged: (rowIndex, colIndex, updatedSeatState) {

                },
                stateModel: SeatLayoutStateModel(
                  rows: 10,
                  cols: 24,
                  seatSvgSize: 14,

                  pathUnSelectedSeat: MySvg.vipSeatSVG,
                  pathSelectedSeat: MySvg.selectedSeatSVG,
                  pathSoldSeat: MySvg.regularSeatSVG,
                  pathDisabledSeat: MySvg.soldSeatSVG,
                  currentSeatsState: const [
                    <SeatState>[
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                    <SeatState>[
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.empty,
                      SeatState.sold,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.disabled,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.unselected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,
                      SeatState.empty,
                      SeatState.selected,
                      SeatState.empty,

                    ],
                  ],

                ),
              ),
            ),

            const SizedBox(height: 28,),
            Row(
              children: [
                const SizedBox(width: 16,),
                SvgPicture.asset(MySvg.selectedSeatSVG, width: 17, height: 17,),
                const SizedBox(width: 8,),
                Text("Selected", style: theme.textTheme.bodySmall?.copyWith(fontSize: 14),),
                const Spacer(),
                SvgPicture.asset(MySvg.soldSeatSVG, width: 17, height: 17,),
                const SizedBox(width: 8,),
                Text("Not available", style: theme.textTheme.bodySmall?.copyWith(fontSize: 14),),
                const Spacer(),
                const SizedBox(width: 16,),
              ],
            ),
            const SizedBox(height: 18,),
            Row(
              children: [
                const SizedBox(width: 16,),
                SvgPicture.asset(MySvg.vipSeatSVG, width: 17, height: 17,),
                const SizedBox(width: 8,),
                Text("VIP (150 \$)", style: theme.textTheme.bodySmall?.copyWith(fontSize: 14),),
                const Spacer(),
                SvgPicture.asset(MySvg.regularSeatSVG, width: 17, height: 17,),
                const SizedBox(width: 8,),
                Text("Regular (50 \$)", style: theme.textTheme.bodySmall?.copyWith(fontSize: 14),),
                const Spacer(),
                const SizedBox(width: 16,),
              ],
            ),

            const Spacer(),
            Padding(
              padding: EdgeInsets.all(MediaQuery.of(context).size.width * 0.06),
              child: Row(
                children: [
                  Expanded(
                    flex: 2,
                    child: Container(
                      decoration: BoxDecoration(
                        color: AppColors.unSelectedTagColor,
                        borderRadius: BorderRadius.circular(12)
                      ),
                      padding: const EdgeInsets.symmetric(vertical: 6),
                      child: Center(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Text("Total Price", style: theme.textTheme.bodyMedium,),
                            Text("\$ 50", style: theme.textTheme.bodyLarge?.copyWith(fontWeight: FontWeight.w600),),
                          ],
                        ),
                      ),

                    ),
                  ),
                  const SizedBox(width: 12,),
                  Expanded(
                    flex: 3,
                    child: CustomButton(
                      buttonText: "Proceed to pay",
                      backgroundColor: AppColors.blueColor,
                      fontSize: 14,
                      onPress: () {
                        //context.pushNamed(RouteNames.booking, extra: provider.movieModel);
                      },
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
